{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Loader/Loader.tsx","api.ts","components/PersonNavLink/PersonNavLink.tsx","components/PeopleTable/PeopleTable.tsx","Pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Loader","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonNavLink","person","slug","sex","name","PeopleTable","people","selectedSlug","length","map","mother","find","mothe","motherName","father","fathe","fatherName","isSelectedPerson","motherLink","fatherLink","born","died","PeoplePage","useState","setPeople","hasError","setHasError","useParams","peopleFromServer","peoples","useEffect","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a2e27020.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text : string\n};\n\nexport const PageNavLink:React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (\n      classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\r\n\r\n// eslint-disable-next-line max-len\r\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\r\n\r\nfunction wait(delay: number) {\r\n  return new Promise(resolve => setTimeout(resolve, delay));\r\n}\r\n\r\nexport function getPeople(): Promise<Person[]> {\r\n  // keep this delay for testing purpose\r\n  return wait(500)\r\n    .then(() => fetch(API_URL))\r\n    .then(response => response.json());\r\n}\r\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\nexport const PersonNavLink:React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonNavLink } from '../PersonNavLink/PersonNavLink';\n\ntype Props = {\n  people: Person[],\n  selectedSlug: string\n};\nexport const PeopleTable:React.FC<Props> = ({ people, selectedSlug }) => {\n  const noPeopleOnServer = people.length <= 0;\n\n  if (noPeopleOnServer) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = people\n            .find(mothe => mothe.name === person.motherName);\n          const father = people\n            .find(fathe => fathe.name === person.fatherName);\n          const isSelectedPerson = selectedSlug === person.slug;\n          const motherLink = person.motherName || '-';\n          const fatherLink = person.fatherName || '-';\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames(\n                {\n                  'has-background-warning': isSelectedPerson,\n                },\n              )}\n            >\n              <td>\n                <PersonNavLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>{mother ? <PersonNavLink person={mother} /> : motherLink}</td>\n              <td>{father ? <PersonNavLink person={father} /> : fatherLink}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const { slug = '' } = useParams();\n\n  const peopleFromServer = async () => {\n    try {\n      const peoples = await getPeople();\n\n      setPeople(peoples);\n    } catch {\n      setHasError(true);\n    } finally {\n      setHasError(false);\n    }\n  };\n\n  useEffect(() => {\n    peopleFromServer();\n  }, []);\n\n  if (hasError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n\n        {people.length <= 0 ? (\n          <Loader />\n        ) : (\n          <PeopleTable people={people} selectedSlug={slug} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PageNavLink } from './components/PageNavLink/PageNavLink';\nimport { PeoplePage } from './Pages/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/\" text=\"Home Page\" />\n\n            <PageNavLink to=\"people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"people\">\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n              <Route\n                path=\":slug\"\n                element={<PeoplePage />}\n              />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}